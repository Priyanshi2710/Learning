@model Domain.Models.CreateEmployee
@{

    ViewBag.Title = "Edit";


}
<h2>Edit</h2>
@using (Html.BeginForm())
{
     <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <div class="form-group">

      </div>
        
        <div class="form-group">

            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.MaritalStatus, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.CityCode, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.CityCode, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.CityCode, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.CountryCode, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
}