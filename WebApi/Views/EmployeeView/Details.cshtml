@model Domain.Models.Employee
@{

    ViewBag.Title = "Details";

}
<style type="text/css">

    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 90vh;
    }

        .container .card {
            height: fit-content;
            width: fit-content;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 4px;
            transition: 0.2s;
            float: left;
            margin-left: 10px;
        }

    .card:hover {
        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
    }


    .card .card-content {
        padding: 10px;
        background-color: cornsilk;
    }

    .card .card-title {
        font-size: 20px;
        margin: 0;
        text-align: center;
    }


    .form-center {
        display: flex;
        justify-content: center;
    }

    .control-label {
        font-size: 18px;
        font-weight: bold;
    }

    .form-control {
        height: 28px;
        border: 1px solid #cdcdcd;
        border-color: rgba(0,0,0,.15);
        background-color: white;
        width: 526px;
        margin-right: -4px;
    }

    .btn {
        font-size: 20px;
        font-weight: bold;
        border-color: burlywood;
        width: max-content;
    }

    body {
        font-family: Arial;
        font-size: 10pt;
    }

    .error {
        color: red;
    }

    /* Media Query for responsive layout */
    @@media (max-width: 768px) {
        .container {
            flex-direction: column;
        }

        .card {
            margin-bottom: 20px;
        }
    }

</style>



<div class="container">

    <div class="card">
        <div class="card-content">
            <h2 class="card-title">
                Employee Details
            </h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
      

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        <div class="form-group">

            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Firstname,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Lastname,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Email,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Gender,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.MaritalStatus,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Birthdate,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Salary,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.Address,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.CityCode, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.CityCode,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.CityCode, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.StateCode,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.TextBoxFor(model => model.CountryCode,new { @class = "form-control disabled" , @readonly=true} )

                @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })

            </div>

        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
}
        @{
            if (ViewBag.Message != null)
            {
                <div>
                    @ViewBag.Message
                </div>
            }
        }
    </div>
</div>

                </div>